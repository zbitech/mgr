{{define "NAMESPACE"}}
apiVersion: v1
kind: Namespace
metadata:
  name: project
  labels:
    platform: zbi
    project: project
    version: v1
    owner: admin
    network: testnet
{{end}}

{{define "AUTHZ_DEPLOYMENT"}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authz-server
  namespace: {{.Namespace}}
  labels:
    platform: zbi
    project: {{.Name}}
    version: {{.Version}}
    network: {{.Network}}
    owner: {{.Owner}}
    app: authz-server
spec:
  selector:
    matchLabels:
      platform: zbi
      project: {{.Name}}
      version: {{.Version}}
      network: {{.Network}}
      owner: {{.Owner}}
      app: authz-server
  template:
    metadata:
      labels:
        platform: zbi
        project: {{.Name}}
        version: {{.Version}}
        network: {{.Network}}
        owner: {{.Owner}}
        app: authz-server
    spec:
#      serviceAccountName: zbi-authz-sa
      containers:
      - name: authz-server
        image: {{.AuthzServerImage}}
        imagePullPolicy: Always
        env:
        - name: ASSET_PATH_DIRECTORY
          value: "/etc/zbi"
        - name: MONGODB_URL
          value: "mongodb+srv://admin:5ysaDYYS7vbs5r4@cluster0.hi6d5.mongodb.net/zbiRepo?retryWrites=true&w=majority"
        - name: IN_CLUSTER
          value: "true"
        ports:
          - name: grpc
            containerPort: 50051
            protocol: TCP
{{end}}

{{define "AUTHZ_SERVICE"}}
apiVersion: v1
kind: Service
metadata:
  name: authz-service
  namespace: {{.Namespace}}
  labels:
    platform: zbi
    project: {{.Name}}
    version: {{.Version}}
    network: {{.Network}}
    owner: {{.Owner}}
    app: authz-server
spec:
  selector:
    platform: zbi
    app: authz-server
    project: {{.Name}}
    version: {{.Version}}
    network: {{.Network}}
    owner: {{.Owner}}
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
{{end}}

{{define "CONTROLLER_PROXY"}}
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: controller-proxy
  namespace: zbi
spec:
  virtualhost:
    fqdn: {{.ControllerDomain}}
    tls:
      secretName: {{.CertSecret}}
#   authorization:
#      extensionRef:
#        name: authz-service
    includes:
{{- range $ .Projects}}
    - name: $.Name
      namespace: $.Namespace
      conditions:
      - prefix: /$.Name
{{- end}}
  routes:
  - conditions:
    - prefix: /
    services:
      - name: {{.ControllerService}}
        port: {{.ControllerPort}}
{{end}}

{{define "PROJECT_PROXY"}}
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: {{.Name}}-proxy
  namespace: {{.Namespace}}
  labels:
    platform: zbi
    project: {{.Name}}
    version: {{.Version}}
    network: {{.Network}}
    owner: {{.Owner}}
spec:
  routes:
{{- range $ .Instances}}
  - conditions:
    - prefix: /{{$.Name}}/{{$.Version}}
    services:
#      - name: zcashd-svc-{{$.Name}}
#        port: 28232
      - name: $.ServicePrefix-{{$.Name}}
        port: $.ServicePort
{{- end}}
{{end}}
